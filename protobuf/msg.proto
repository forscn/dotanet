//指定版本
//注意proto3与proto2的写法有些不同
syntax = "proto3";

//包名，通过protoc生成时go文件时
package protomsg;





message MsgBase {
    string  ModeType = 1;
    int32   Uid = 2;
    string  MsgType = 3;
    int32   ConnectId = 4;
    bytes Datas = 5;
}
message MsgRegisterToGate {
    string ModeType = 1;
}

message CS_MsgQuickLogin {
    string Platform = 1;
    string Machineid = 2;
    string Name = 3;
}


message CS_Login {
    string Phonenumber = 1;
    string Platform = 2;
    string Machineid = 3;
    string Wechat_id = 4;
    string QQ_id = 5;
}
//登录成功后的 选择角色
message CS_SelectCharacter {
    CharacterBaseDatas SelectCharacter = 1;//选择角色
}




//玩家移动操作
message CS_PlayerMove {
    repeated int32 IDs = 1;//操作的单位对象
    float X = 2;//移动的x方向 技能的目标点x或目标方向
    float Y = 3;//移动的Y方向 技能的目标点Y或目标方向
    bool IsStart = 4;//true 表示开始移动  false表示结束移动
}
//玩家攻击操作
message CS_PlayerAttack {
    repeated int32 IDs = 1;//操作的单位对象
    int32 TargetUnitID = 2;//攻击对象id 或者技能对象ID
}

//玩家技能操作(包括道具)
message CS_PlayerSkill {
    int32 ID = 1;//操作的单位对象
    int32 SkillID = 2;//技能id
    float X = 3;//移动的x方向 技能的目标点x或目标方向
    float Y = 4;//移动的Y方向 技能的目标点Y或目标方向
    int32 TargetUnitID = 5;//攻击对象id 或者技能对象ID
}

//技能数据
message SkillDatas{
    int32   TypeID = 1;
    int32   Level = 2;//技能等级
    float RemainCDTime = 3;//技能CD剩余时间
    int32   CanUpgrade = 4;//是否可以升级 1 表示可以  2 表示不可以
    int32   Index = 5;//位置索引
    int32   CastType = 6;//施法类型:  1:主动技能  2:被动技能
    int32   CastTargetType = 7;//施法目标类型 1:自身为目标 2:以单位为目标 3:以地面1点为目标
    int32   UnitTargetTeam = 8;//目标单位关系 1:友方  2:敌方 3:友方敌方都行
    int32   UnitTargetCamp = 9;//目标单位阵营 (1:玩家 2:NPC) 3:玩家NPC都行
    int32   NoCareMagicImmune = 10;//无视技能免疫 (1:无视技能免疫 2:非)
    float CastRange = 11;//施法距离
    float Cooldown = 12;//技能冷却时间
    float HurtRange = 13;//伤害范围 小于等于0表示单体
    int32   ManaCost = 14;//技能魔法消耗
}

//单位数据
message UnitDatas{
    string  Name = 1;
    int32   Level = 2;
    int32   HP = 3;
    int32   MP = 4;
    float   X = 5;
    float   Y = 6;
    int32   ID = 7;
    string  ModeType = 8;//模型类型(客户端使用的模型名字)
    int32   MaxHP = 9;
    int32   MaxMP = 10;
    int32   Experience = 11;
    int32   MaxExperience = 12;
    int32   ControlID = 13;//控制者id
    int32   AnimotorState = 14;//动画状态 1:idle 2:walk 3:attack 4:skill 5:death
    float   AttackTime = 15;//攻击动画时间
    float   DirectionX = 16;//方向x
    float   DirectionY = 17;//方向y
    int32   UnitType = 18;//单位类型(1:英雄 2:普通单位 3:远古 4:boss)
    int32   AttackAcpabilities = 19;//(1:近程攻击 2:远程攻击)
    int32   AttackMode = 20;//攻击模式(1:和平模式 2:组队模式 3:全体模式 4:阵营模式(玩家,NPC) 5:行会模式)
    int32   IsMain = 21;//是否是主单位
    int32   IsDeath = 22;//是否死亡((1:死亡 2:没死)) 死亡后不显示血条
    repeated SkillDatas SD = 23;//技能数据

    //单位状态(idle walk attack skill die)
    //各种buff状态(单位身上的buff 包括剩余时间)
    //单位的装备
    //单位的技能

}
message BulletDatas{
    int32 ID = 1;//子弹唯一ID
    string ModeType = 2;//弹道特效模型 (客户端使用的模型名字)
    float X = 3;
    float Y = 4;
    float Z = 5;
    int32 State = 6;//状态 子弹状态(1:创建 需要创建特效,2:移动,3:到达后计算结果(伤害和回血) 4:完成 可以删除了)
    float StartX = 7;
    float StartY = 8;
    float StartZ = 9;
    float EndX = 10;
    float EndY = 11;
    float EndZ = 12;

}



message MsgUserEnterScene {
    int32 Uid = 1;
    int32 ConnectId = 2;
    string SrcServerName = 3;
    string DestServerName = 4;
    string SceneName = 5;
    bytes Datas = 6;    //玩家信息数据
}

//玩家自己造成的伤害数据
message MsgPlayerHurt{
    int32 HurtUnitID = 1;   //伤害单位ID
    int32 HurtAllValue = 2; //总伤害值
    int32 HurtMagicValue = 3;//魔法伤害值
    int32 IsCrit = 4;   //是否暴击
}

//每帧更新单位数据
message SC_Update  {
    int32   CurFrame = 1;//当前帧
    repeated UnitDatas NewUnits = 2;//新的单位数据
    repeated UnitDatas OldUnits = 3;//旧单位(只更新变化的值)
    repeated int32 RemoveUnits = 4;//删除单位(单位ID)

    repeated BulletDatas NewBullets = 5;//新的子弹
    repeated BulletDatas OldBullets = 6;//旧子弹(只更新变化值)
    repeated int32 RemoveBullets = 7;//删除子弹(子弹ID)

    repeated MsgPlayerHurt PlayerHurt = 8;//玩家造成的伤害
}

//玩家进入新场景时的场景信息
message SC_NewScene{
    string Name = 1;//场景名称
    int32  LogicFps = 2;//逻辑帧率 (20即每秒20帧)
    int32  CurFrame = 3;//当前帧 (客户端通过当前帧和本地时间匹配计算延时逻辑)
    string ServerName = 4;//服务器名字
}


//单位数据
message CharacterBaseDatas{
    int32   Characterid = 1;
    string  Name = 2;
    int32   Typeid = 3;
    int32   Level = 4;
}

message SC_Logined {
    int32 Code = 1;//登录结果 1表示成功 0表示失败
    int32 Uid = 2;//UID
    string Error = 3;//失败原因
    repeated CharacterBaseDatas Characters = 4;//已经拥有的角色
}
//选择角色结果()
message SC_SelectCharacterResult {
    int32 Code = 1;//选择角色结果 1表示成功 0表示失败
    int32 Characterid = 2;//Characterid
    string Error = 3;//失败原因  名字重复
}